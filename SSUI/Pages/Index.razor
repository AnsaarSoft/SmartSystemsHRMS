@layout MainLayout
@page "/dashboard"
@page "/"

<PageTitle>Dashboard</PageTitle>

<h1>Dashboard</h1>

@using System.Net.Http.Json
@inject HttpClient httpClient

<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<Element,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Number</MudTd>
        <MudTd DataLabel="Sign">@context.Sign</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position">@context.Position</MudTd>
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
    <MudSpacer />
    <div style="min-width:200px;">
        <MudText Inline="true" Class="align-self-center">Selected1: @selectedItem1?.Name</MudText>
    </div>
</div>
@code {

    public class Element
    {
        public int Number { get; set; }
        public string Sign { get; set; }
        public string Name { get; set; }
        public string Position { get; set; }
        public string Molar { get; set; }
    }

    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private Element selectedItem1 = null;
    // private HashSet<Element> selectedItems = new HashSet<Element>();

    // private IEnumerable<Element> Elements = new List<Element>();
    private IEnumerable<Element> Elements = new List<Element>();

    protected override async Task OnInitializedAsync()
    {
        // Elements = await httpClient.GetFromJsonAsync<List<Element>>("webapi/periodictable");
        Elements = new List<Element>()
{
    new Element { Number = 1, Sign = "H", Name = "Hydrogen", Position = "1s1", Molar = "1.008" },
    new Element { Number = 2, Sign = "He", Name = "Helium", Position = "1s2", Molar = "4.003" },
    new Element { Number = 3, Sign = "Li", Name = "Lithium", Position = "2s1", Molar = "6.941" },
    new Element { Number = 4, Sign = "Be", Name = "Beryllium", Position = "2s2", Molar = "9.0122" },
    new Element { Number = 5, Sign = "B", Name = "Boron", Position = "2p1", Molar = "10.811" },
    new Element { Number = 6, Sign = "C", Name = "Carbon", Position = "2p2", Molar = "12.011" },
    new Element { Number = 7, Sign = "N", Name = "Nitrogen", Position = "2p3", Molar = "14.007" },
    new Element { Number = 8, Sign = "O", Name = "Oxygen", Position = "2p4", Molar = "15.999" },
    new Element { Number = 9, Sign = "F", Name = "Fluorine", Position = "2p5", Molar = "18.998" },
    new Element { Number = 10, Sign = "Ne", Name = "Neon", Position = "2p6", Molar = "20.180" },
    // Add more elements as needed...
};
    }

    private bool FilterFunc1(Element element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Element element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Sign.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
            return true;
        return false;
    }
}
